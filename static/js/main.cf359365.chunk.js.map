{"version":3,"sources":["components/create.component.js","components/edit.component.js","components/TableRow.js","components/index.component.js","App.js","serviceWorker.js","index.js"],"names":["Create","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeName","bind","assertThisInitialized","onChangeCompany","onChangeAge","onSubmit","state","name","company","age","e","setState","target","value","preventDefault","obj","axios","post","then","res","console","log","data","react_default","a","createElement","style","marginTop","className","type","onChange","Component","Edit","_this2","get","match","params","id","response","catch","error","history","push","align","TableRow","delete","_id","err","react_router_dom","to","onClick","Index","persons","prevProps","prevState","snapshot","_this3","isMount","map","object","i","components_TableRow","key","colSpan","tabRow","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf359365.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Create extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeCompany = this.onChangeCompany.bind(this);\r\n        this.onChangeAge = this.onChangeAge.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            company: '',\r\n            age:''\r\n        }\r\n    }\r\n\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeCompany(e) {\r\n        this.setState({\r\n            company: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeAge(e) {\r\n        this.setState({\r\n            age: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const obj = {\r\n            name: this.state.name,\r\n            company: this.state.company,\r\n            age: this.state.age\r\n        };\r\n        axios.post('http://13.76.38.41:4000/persons/add', obj)\r\n            .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            name: '',\r\n            company: '',\r\n            age: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Add New Person</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Person Name: </label>\r\n                        <input type=\"text\" className=\"form-control\"\r\n                               value={this.state.name}\r\n                               onChange={this.onChangeName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Company Name: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.company}\r\n                               onChange={this.onChangeCompany}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Age: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.age}\r\n                               onChange={this.onChangeAge}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Register Person\" className=\"btn btn-primary\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeCompany  = this.onChangeCompany.bind(this);\r\n        this.onChangeAge = this.onChangeAge.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            company: '',\r\n            age:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://13.76.38.41:4000/persons/edit/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    name: response.data.name,\r\n                    company: response.data.company,\r\n                    age: response.data.age });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n    onChangeCompany(e) {\r\n        this.setState({\r\n            company: e.target.value\r\n        })\r\n    }\r\n    onChangeAge(e) {\r\n        this.setState({\r\n            age: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            name: this.state.name,\r\n            company: this.state.company,\r\n            age: this.state.age\r\n        };\r\n        axios.post('http://13.76.38.41:4000/persons/update/'+this.props.match.params.id, obj)\r\n            .then(res => console.log(res.data));\r\n\r\n        this.props.history.push('/index');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: 10 }}>\r\n                <h3 align=\"center\">Update Person Info</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Person Name:  </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.name}\r\n                            onChange={this.onChangeName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Company Name: </label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               value={this.state.company}\r\n                               onChange={this.onChangeCompany}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Age: </label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               value={this.state.age}\r\n                               onChange={this.onChangeAge}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\"\r\n                               value=\"Update Person Info\"\r\n                               className=\"btn btn-primary\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass TableRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.delete = this.delete.bind(this);\r\n    }\r\n    delete() {\r\n        axios.get('http://13.76.38.41:4000/persons/delete/'+this.props.obj._id)\r\n            .then(console.log('Deleted'))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    {this.props.obj.name}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.company}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.age}\r\n                </td>\r\n                <td>\r\n                    <Link to={\"/edit/\"+this.props.obj._id} className=\"btn btn-primary\">Edit</Link>\r\n                </td>\r\n                <td>\r\n                    <button onClick={this.delete} className=\"btn btn-danger\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableRow;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport TableRow from './TableRow';\r\n\r\nexport default class Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {persons: []};\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://13.76.38.41:4000/persons')\r\n            .then(response => {\r\n                console.log(response.data);\r\n                    this.setState({persons: response.data});\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        this.isMount = true;\r\n        axios.get('http://13.76.38.41:4000/persons')\r\n            .then(response => {\r\n                console.log(response.data);\r\n                if(this.isMount)\r\n                {\r\n                    this.setState({persons: response.data});\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })   \r\n    }\r\n    componentWillMount() {\r\n        this.isMount = false;\r\n    }\r\n\r\n    tabRow() {\r\n        return this.state.persons.map(function (object, i) {\r\n            return <TableRow obj={object} key={i}/>;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 align=\"center\">Persons List</h3>\r\n                <table className=\"table table-striped\" style={{marginTop: 20}}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Company</th>\r\n                        <th>Age</th>\r\n                        <th colSpan=\"2\">Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.tabRow()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport Create from './components/create.component';\r\nimport Edit from './components/edit.component';\r\nimport Index from './components/index.component';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"container\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={'/'} className=\"nav-link\">Home</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={'/create'} className=\"nav-link\">Create</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to={'/index'} className=\"nav-link\">Index</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav> <br/>\r\n                    <h2>Create app CRUD with ReactJs, NodeJs, MongoDB</h2> <br/>\r\n                    <Switch>\r\n                        <Route exact path='/create' component={ Create } />\r\n                        <Route path='/edit/:id' component={ Edit } />\r\n                        <Route path='/index' component={ Index } />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}